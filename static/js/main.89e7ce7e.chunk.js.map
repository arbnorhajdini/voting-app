{"version":3,"sources":["redux/actions/types.js","redux/reducers/rootReducer.js","redux/reducers/questions.js","redux/reducers/selectedQuestion.js","redux/store.js","serviceWorker.js","redux/actions/index.js","constants.js","theme/theme.js","components/QuestionTemplate.jsx","components/Modal.jsx","components/QuestionForm.jsx","api/baseApi.js","components/CreateQuestion.jsx","components/Error.jsx","components/HomePage.jsx","components/QuestionDetails.jsx","assets/vote.png","components/AppBar.jsx","App.js","index.js"],"names":["FETCH_QUESTIONS_SUCCESS","IS_LOADING","FETCH_QUESTIONS_ERROR","FETCH_QUESTION_SUCCESS","rootReducer","combineReducers","questions","state","action","type","Object","assign","questionsHaveError","hasError","selectedQuestion","question","isLoading","configStore","initialState","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","createStore","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","fetchQuestionsError","status","BASE_URL","theme","primary","main","secondary","highlight","base","white","gray","StyledQuestionWrapper","styled","div","displayName","StyledQuestionHeader","StyledQuestionBody","StyledQuestionFooter","StyledQuestionButton","button","QuestionTemplate","publishedDate","choices","url","moment","format","to","data-hook","StyledHeader","Modal","Header","StyledText","p","StyledButton","Button","FormModal","props","size","centered","Title","header","Body","body","Footer","showVotingResults","onClick","onHide","StyledLabel","Label","connect","createQuestion","payload","dispatch","useState","setQuestion","setChoices","modalShow","setModalShow","modalBodyText","setModalBodyText","modalHeaderText","setModalHeaderText","onSubmit","event","choicesArray","split","payloadObject","JSON","stringify","axios","post","headers","preventDefault","row","sm","placeholder","value","onChange","target","check","offset","show","StyledCard","Card","StyledCardBody","CardBody","CreateQuestion","collapse","setCollapse","color","isOpen","ErrorAlert","Alert","severity","AlertTitle","StyledApp","StyledAppHeader","StyledContainer","StyledLoaderContainer","StyledLoader","Loader","StyledError","fetchQuestions","request","get","resp","data","useEffect","questionsTemplate","keys","map","key","index","published_at","length","StyledQuestion","StyledTableBodyRow","TableRow","TableHeadRow","StyledTableCell","TableCell","StyledProgressBar","withStyles","root","height","borderRadius","colorPrimary","backgroundColor","bar","ProgressBar","fetchSingleQuestion","id","postVote","choice","title","setChoice","questionId","params","calculateVotesPercent","choiceVotes","totalVotes","reduce","n","votes","percent","parseInt","isNaN","toFixed","choicesList","className","handleChoiceOnClick","component","scope","variant","TableContainer","Paper","Table","TableHead","TableBody","handleModalHide","styles","makeStyles","StyledAppBar","AppBar","StyledAppBarLogo","img","StyledHomeIcon","HomeIcon","ButtonAppBar","position","Toolbar","IconButton","edge","src","vote","alt","App","exact","path","HomePage","render","QuestionDetails","store","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.89e7ce7e.chunk.js","sourcesContent":["export const FETCH_QUESTIONS_SUCCESS = 'FETCH_QUESTIONS_SUCCESS';\r\nexport const IS_LOADING = 'IS_LOADING';\r\nexport const FETCH_QUESTIONS_ERROR = 'FETCH_QUESTIONS_ERROR';\r\nexport const FETCH_QUESTION_SUCCESS = 'FETCH_QUESTION_SUCCESS';\r\nexport const VOTE_SELECTED = 'VOTE_SELECTED';\r\nexport const QUESTION_CREATED = 'QUESTION_CREATED';\r\n","import { combineReducers } from 'redux';\r\nimport { questions, questionsHaveError, isLoading } from './questions';\r\nimport { selectedQuestion } from './selectedQuestion';\r\n\r\nconst rootReducer = combineReducers({\r\n  questions,\r\n  questionsHaveError,\r\n  selectedQuestion,\r\n  isLoading\r\n})\r\n\r\nexport default rootReducer;\r\n","import {\r\n  FETCH_QUESTIONS_SUCCESS,\r\n  FETCH_QUESTIONS_ERROR,\r\n  IS_LOADING\r\n} from 'redux/actions/types';\r\n  \r\nexport const questions = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_QUESTIONS_SUCCESS:\r\n      return Object.assign({}, state, action.questions);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const isLoading = (state = false, action) => {\r\n  switch (action.type) {\r\n    case IS_LOADING:\r\n      return action.isLoading;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const questionsHaveError = (state = false, action) => {\r\n  switch (action.type) {\r\n    case FETCH_QUESTIONS_ERROR:\r\n      return action.hasError;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { FETCH_QUESTION_SUCCESS } from 'redux/actions/types';\r\n\r\nexport const selectedQuestion = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_QUESTION_SUCCESS:\r\n      return Object.assign({}, state, action.question);\r\n    default:\r\n      return state;\r\n  }\r\n}","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from 'redux/reducers/rootReducer';\r\n\r\nconst configStore = (initialState) => {\r\n  const enhancersComposition = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    })\r\n    : compose;\r\n  const enhancer = enhancersComposition(applyMiddleware(thunk));\r\n  \r\n  return createStore(rootReducer, initialState, enhancer);\r\n}\r\n\r\nexport default configStore;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {\r\n  FETCH_QUESTIONS_SUCCESS,\r\n  FETCH_QUESTIONS_ERROR,\r\n  FETCH_QUESTION_SUCCESS,\r\n  IS_LOADING,\r\n  VOTE_SELECTED,\r\n  QUESTION_CREATED\r\n} from './types';\r\n\r\nexport const fetchQuestionsSuccess = (questions) => {\r\n  return {\r\n    type: FETCH_QUESTIONS_SUCCESS, questions\r\n  };\r\n};\r\n\r\nexport const fetchQuestionsError = (status) => {\r\n  return {\r\n    type: FETCH_QUESTIONS_ERROR, hasError: status\r\n  };\r\n};\r\n\r\nexport const fetchQuestionSuccess = (question) => {\r\n  return {\r\n    type: FETCH_QUESTION_SUCCESS, question\r\n  };\r\n};\r\n\r\nexport const isLoading = (status) => {\r\n  return {\r\n    type: IS_LOADING, isLoading: status\r\n  };\r\n};\r\n\r\nexport const voteSelected = (request) => {\r\n  return {\r\n    type: VOTE_SELECTED, payload: request\r\n  };\r\n};\r\n\r\nexport const questionCreated = (request) => {\r\n  return {\r\n    type: QUESTION_CREATED, payload: request\r\n  };\r\n};\r\n","export const BASE_URL = 'https://polls.apiblueprint.org';\r\n","export const theme = {\r\n  palette: {\r\n    primary: {\r\n      main: '#00cea5',\r\n    },\r\n    secondary: {\r\n      main: '#164ca3',\r\n    },\r\n    highlight: {\r\n      main: '#131a50',\r\n    },\r\n    base: {\r\n      main: '#ecf7ff',\r\n      white: '#ffffff',\r\n      gray: '#c3cad2',\r\n    },\r\n    \r\n  }\r\n};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport moment from 'moment'\r\nimport {theme} from 'theme/theme.js';\r\n\r\nconst StyledQuestionWrapper = styled.div`\r\n  background: ${theme.palette.primary.main};\r\n  border-radius: 5px;\r\n  box-shadow: 4px 4px 4px -4px ${theme.palette.base.gray};\r\n`\r\nStyledQuestionWrapper.displayName = 'StyledQuestionWrapper'\r\n\r\nconst StyledQuestionHeader = styled.div`\r\n\tbackground: ${theme.palette.secondary.main};\r\n  text-align: center;\r\n  color: ${theme.palette.base.white};\r\n  padding: 10px;\r\n`\r\nStyledQuestionHeader.displayName = 'StyledQuestionHeader'\r\n\r\nconst StyledQuestionBody = styled.div`\r\n  display: flex;\r\n  flex-wrap: row;\r\n  padding: 10px 15px;\r\n`\r\nStyledQuestionBody.displayName = 'StyledQuestionBody'\r\n\r\nconst StyledQuestionFooter = styled.div`\r\n  text-align: right;\r\n  padding: 15px;\r\n`\r\nStyledQuestionFooter.displayName = 'StyledQuestionFooter'\r\n\r\nconst StyledQuestionButton = styled.button`\r\n  font-size: 14px;\r\n  border: none;\r\n  background: ${theme.palette.secondary.main};\r\n  color: ${theme.palette.base.white};\r\n  font-weight: bold;\r\n  padding: 10px 20px;\r\n  &:hover,\r\n  &:focus {\r\n    background-color: ${theme.palette.highlight.main};\r\n  }\r\n`\r\nStyledQuestionButton.displayName = 'StyledQuestionButton'\r\n\r\nconst QuestionTemplate = ({ question, publishedDate, choices, url }) => {\r\n  return (\r\n    <StyledQuestionWrapper>\r\n      <StyledQuestionHeader>\r\n          <h5>{question}</h5>\r\n      </StyledQuestionHeader>\r\n      <StyledQuestionBody>\r\n        <div>\r\n          <h5>Published on: <span>{moment(publishedDate).format('MMMM Do YYYY, HH:mm')}</span></h5>\r\n\t\t\t\t\t<h5>Available choices: <span>{choices}</span></h5>\r\n        </div>\r\n      </StyledQuestionBody>\r\n      <StyledQuestionFooter>\r\n        <Link to={`${url}`}><StyledQuestionButton data-hook='vote-button'>Vote</StyledQuestionButton></Link>\r\n      </StyledQuestionFooter>\r\n    </StyledQuestionWrapper>\r\n\r\n  );\r\n}\r\n\r\nexport default QuestionTemplate;","import { Button, Modal } from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport {theme} from 'theme/theme.js';\r\n\r\nconst StyledHeader = styled(Modal.Header)`\r\n  background: ${theme.palette.secondary.main};\r\n  color: ${theme.palette.base.white};\r\n`\r\nStyledHeader.displayName = 'StyledHeader'\r\n\r\nconst StyledText = styled.p`\r\n  color: ${theme.palette.highlight.main};\r\n  font-size: 20px;\r\n}\r\n`\r\nStyledText.displayName = 'StyledText'\r\n\r\nconst StyledButton = styled(Button)`\r\n  background: ${theme.palette.secondary.main};\r\n  font-weight: bold;\r\n\t&:hover {\r\n\t\tbackground: ${theme.palette.highlight.main};\r\n\t}\r\n`\r\nStyledButton.displayName = 'StyledButton'\r\n\r\nconst FormModal = (props) => {\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size='lg'\r\n      data-hook='info-modal'\r\n      centered\r\n    >\r\n      <StyledHeader>\r\n        <Modal.Title>\r\n          {props.header}\r\n        </Modal.Title>\r\n      </StyledHeader>\r\n      <Modal.Body>\r\n        <StyledText>\r\n          {props.body}\r\n        </StyledText>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n\t\t\t\t{props.showVotingResults &&\r\n\t\t\t\t\t<StyledButton data-hook='show-results' onClick={props.showVotingResults}>Show Results</StyledButton>}\r\n\t\t    <Link to={`/`}>\r\n          <StyledButton data-hook='show-home' onClick={props.onHide}>Back to Home</StyledButton>\r\n        </Link>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default FormModal;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Col, Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport styled from 'styled-components';\r\nimport axios from \"axios/index\";\r\nimport PropTypes from 'prop-types';\r\nimport { createQuestion } from 'api/baseApi.js';\r\nimport {BASE_URL} from 'constants.js';\r\nimport FormModal from 'components/Modal';\r\nimport {theme} from 'theme/theme.js';\r\n\r\nconst StyledButton = styled(Button)`\r\n  background: ${theme.palette.secondary.main};\r\n  font-weight: bold;\r\n  border: none;\r\n\t&:hover {\r\n\t\tbackground: ${theme.palette.highlight.main};\r\n\t}\r\n`\r\nStyledButton.displayName = 'StyledButton'\r\n\r\nconst StyledLabel = styled(Label)`\r\n  font-weight: bold;\r\n  color: ${theme.palette.highlight.main};\r\n`\r\nStyledLabel.displayName = 'StyledLabel'\r\n\r\nconst QuestionForm = (props) => {\r\n  const [question, setQuestion] = useState('');\r\n  const [choices, setChoices] = useState('');\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [modalBodyText, setModalBodyText] = useState('');\r\n  const [modalHeaderText, setModalHeaderText] = useState('');\r\n\r\n\tconst handleQuestion = (event) => {\r\n\t  setQuestion(event.target.value);\r\n\t};\r\n\r\n  const handleChoices = (event) => {\r\n    setChoices(event.target.value);\r\n  }\r\n\r\n  const handleFormSubmit = (event) => {\r\n\t\tconst choicesArray = choices.split(',');\r\n\t\tconst payloadObject = '{\"question\": \"'+ question +'\", \"choices\": '+ JSON.stringify(choicesArray) + '}';\r\n\r\n    axios.post(`${BASE_URL}/questions?page=1`, payloadObject, {\r\n\t\t\t\theaders: {'Content-Type': 'application/json'}\r\n\t\t\t}).then(() => {\r\n        setModalShow(true);\r\n\t\t\t\tsetModalHeaderText('Success')\r\n\t\t\t\tsetModalBodyText('The new question has been created successfully.');\r\n\t    })\r\n\t    .catch(() => {\r\n        setModalShow(true);\r\n\t\t\t\tsetModalHeaderText('Error')\r\n\t\t\t\tsetModalBodyText('The new question could not be created. Please try again.');\r\n\t    });\r\n    props.createQuestion(payloadObject);\r\n\t  event.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <>\r\n     \t<Form onSubmit={handleFormSubmit} data-hook='question-form'>\r\n        <FormGroup row>\r\n\t        <StyledLabel sm={2}>New Question</StyledLabel>\r\n\t        <Col sm={10}>\r\n\t          <Input type=\"text\" data-hook='question-name' placeholder=\"Type your question here\" value={question} onChange={handleQuestion} />\r\n\t        </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n\t        <StyledLabel sm={2}>Choices</StyledLabel>\r\n\t        <Col sm={10}>\r\n\t          <Input type=\"textarea\" data-hook='choices-list' placeholder=\"Type your choices separated by a comma and a space. Example: Cat, Dog, Rat\" value={choices} onChange={handleChoices}/>\r\n\t        </Col>\r\n        </FormGroup>\r\n        <FormGroup check row>\r\n\t        <Col sm={{ size: 10, offset: 5 }}>\r\n\t          <StyledButton>Submit Question</StyledButton>\r\n\t        </Col>\r\n        </FormGroup>\r\n\t    </Form>\r\n      <FormModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n\t\t\t\theader={modalHeaderText}\r\n\t\t\t\tbody={modalBodyText}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nQuestionForm.propTypes = {\r\n  createQuestion: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { createQuestion })(QuestionForm);","import axios from 'axios';\r\nimport {\r\n  fetchQuestionsSuccess,\r\n  fetchQuestionsError,\r\n  fetchQuestionSuccess,\r\n  isLoading,\r\n  voteSelected,\r\n  questionCreated\r\n} from 'redux/actions';\r\nimport {BASE_URL} from 'constants.js';\r\n\r\nexport const fetchQuestions = () => {\r\n\tlet url = `${BASE_URL}/questions`;\r\n\tlet request = axios.get(url);\r\n\treturn dispatch => {\r\n    dispatch(isLoading(true));\r\n    request.then(resp => {\r\n      dispatch(fetchQuestionsSuccess(resp.data));\r\n      dispatch(isLoading(false));\r\n      dispatch(fetchQuestionsError(false));\r\n    }).catch(() => {\r\n      dispatch(fetchQuestionsError(true));\r\n    });\r\n\t}\r\n}\r\n\r\nexport const fetchSingleQuestion = (id) => {\r\n  let url = `${BASE_URL}/questions/${id}`;\r\n  let request = axios.get(url);\r\n\r\n  return dispatch => {\r\n    dispatch(isLoading(true));\r\n    request.then(resp => {\r\n        dispatch(fetchQuestionSuccess(resp.data));\r\n        dispatch(isLoading(false));\r\n        dispatch(fetchQuestionsError(false));\r\n    }).catch(() => {\r\n        dispatch(fetchQuestionsError(true));\r\n    });\r\n  }\r\n}\r\n\r\nexport const postVote = (choice) => {\r\n  return dispatch => dispatch(voteSelected(choice))\r\n}\r\n\r\nexport const createQuestion = (payload) => {\r\n  return dispatch => dispatch(questionCreated(payload))\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Collapse, Button, CardBody, Card } from 'reactstrap';\r\nimport styled from 'styled-components'\r\nimport QuestionForm from './QuestionForm';\r\nimport {theme} from 'theme/theme.js';\r\n\r\nconst StyledButton = styled(Button)`\r\n  display: block;\r\n  text-align: center;\r\n  background: ${theme.palette.secondary.main};\r\n  max-width: 80vw;\r\n  width: 100%;\r\n  margin: 20px auto;\r\n  height: 50px;\r\n  font-size: 24px;\r\n  border: none;\r\n  &:hover,\r\n  &:focus {\r\n\t\tbackground: ${theme.palette.highlight.main};\r\n\t}\r\n`\r\n\r\nStyledButton.displayName = 'StyledButton'\r\n\r\nconst StyledCard = styled(Card)`\r\n  width: 81%;\r\n  margin: 0px auto;\r\n`\r\nStyledCard.displayName = 'StyledCard'\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  background: ${theme.palette.primary.main};\r\n`\r\nStyledCardBody.displayName = 'StyledCardBody'\r\n\r\nconst CreateQuestion = () => {\r\n  const [collapse, setCollapse] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setCollapse(!collapse);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <StyledButton color=\"primary\" onClick={toggle} data-hook='create-question'>Create Question</StyledButton>\r\n      <Collapse isOpen={collapse}>\r\n        <StyledCard>\r\n          <StyledCardBody>\r\n            <QuestionForm />\r\n          </StyledCardBody>\r\n        </StyledCard>\r\n      </Collapse>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CreateQuestion;\r\n","import React from 'react';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\n\r\nexport default function ErrorAlert() {\r\n  return (\r\n    <div >\r\n      <Alert severity=\"error\">\r\n        <AlertTitle>Error</AlertTitle>\r\n        This is an error in fetching data - <strong>Please check your internet connection!</strong>\r\n      </Alert>\r\n\r\n    </div>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Loader from '@material-ui/core/CircularProgress';\r\nimport { fetchQuestions } from 'api/baseApi.js';\r\nimport QuestionTemplate from './QuestionTemplate';\r\nimport CreateQuestion from './CreateQuestion';\r\nimport Error from './Error';\r\nimport {theme} from 'theme/theme.js';\r\n\r\nconst StyledApp = styled.div`\r\n  min-height: 0;\r\n  display: inline-block;\r\n  position: relative;\r\n  margin: 50px 0;\r\n  color: ${theme.palette.highlight.main};\r\n  width: 100%;\r\n`\r\nStyledApp.displayName = 'StyledApp'\r\n\r\nconst StyledAppHeader = styled.div`\r\n  text-align: center;\r\n  background: ${theme.palette.primary.main};\r\n  max-width: 80vw;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  height: 75px;\r\n  padding-top: 12px;\r\n`\r\nStyledAppHeader.displayName = 'StyledAppHeader'\r\n\r\nconst StyledContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-column-gap: 20px;\r\n  grid-row-gap: 20px;\r\n  justify-items: stretch;\r\n  align-items: stretch;\r\n  width: 81%;\r\n  margin: 1rem auto;\r\n\t@media (max-width: 870px) {\r\n\t  grid-template-columns: 1fr 1fr;\r\n\t}\r\n\t@media (max-width: 480px) {\r\n\t  grid-template-columns: 1fr;\r\n\t}\r\n`\r\nStyledContainer.displayName = 'StyledContainer'\r\n\r\nconst StyledLoaderContainer = styled.div`\r\n  max-width: 60px;\r\n  width: 100%;\r\n  margin: 100px auto;\r\n`\r\nStyledLoaderContainer.displayName = 'StyledLoaderContainer'\r\n\r\nconst StyledLoader = styled(Loader)`\r\n  color: ${theme.palette.secondary.main};\r\n`\r\nStyledLoader.displayName = 'StyledLoader'\r\n\r\nconst StyledError = styled.div`\r\n  max-width: 80vw;\r\n  width: 100%;\r\n  margin: 80px auto;\r\n`\r\nStyledError.displayName = 'StyledError'\r\n\r\nconst QuestionsList = (props) => {\r\n\r\n  useEffect(() => {\r\n    props.fetchQuestions();\r\n  }, []); // eslint-disable-line\r\n\r\n  const { questions, isLoading, questionsHaveError } = props;\r\n  const questionsTemplate = Object.keys(questions).map((key, index) => {\r\n    return <QuestionTemplate\r\n      key={key}\r\n      question={questions[key].question}\r\n      publishedDate={questions[key].published_at}\r\n      choices={questions[key].choices.length}\r\n      url={questions[key].url}\r\n\t\t/>\r\n  });\r\n\r\n  return (\r\n  \t<StyledApp>\r\n      <StyledAppHeader data-hook='app-header'>\r\n      \t<h1>Questions</h1>\r\n      </StyledAppHeader>\r\n      <CreateQuestion />\r\n      {isLoading && !questionsHaveError &&\r\n\t\t\t\t<StyledLoaderContainer><StyledLoader /></StyledLoaderContainer>}\r\n\t\t\t{isLoading && questionsHaveError && <StyledError><Error /></StyledError>}\r\n      <StyledContainer data-hook='questions-container'>\r\n        {!isLoading && questionsTemplate}\r\n      </StyledContainer>\r\n    </StyledApp>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps({ questions, isLoading, questionsHaveError }) {\r\n  return { questions, isLoading, questionsHaveError }\r\n}\r\n\r\nQuestionsList.propTypes = {\r\n  isLoading: PropTypes.bool.isRequired,\r\n\tquestionsHaveError: PropTypes.bool.isRequired,\r\n  questions: PropTypes.object.isRequired,\r\n  fetchQuestions: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchQuestions })(QuestionsList);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport axios from \"axios/index\";\r\nimport {BASE_URL} from 'constants.js';\r\nimport { fetchSingleQuestion, postVote } from 'api/baseApi.js';\r\nimport FormModal from 'components/Modal';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ProgressBar from '@material-ui/core/LinearProgress';\r\nimport Loader from '@material-ui/core/CircularProgress';\r\nimport {theme} from 'theme/theme.js';\r\n\r\nconst StyledApp = styled.div`\r\n  min-height: 0;\r\n  display: inline-block;\r\n  position: relative;\r\n  margin: 50px 0;\r\n  color: ${theme.palette.highlight.main};\r\n  width: 100%;\r\n`\r\nStyledApp.displayName = 'StyledApp'\r\n\r\nconst StyledAppHeader = styled.div`\r\n  text-align: center;\r\n  background: ${theme.palette.primary.main};\r\n  max-width: 80vw;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  height: 75px;\r\n  padding-top: 12px;\r\n`\r\nStyledAppHeader.displayName = 'StyledAppHeader'\r\n\r\nconst StyledContainer = styled.div`\r\n  display: block;\r\n  justify-items: stretch;\r\n  align-items: stretch;\r\n  width: 80%;\r\n  margin: 1rem auto;\r\n`\r\nStyledContainer.displayName = 'StyledContainer'\r\n\r\nconst StyledQuestion = styled.div`\r\n  display: block;\r\n  background: ${theme.palette.secondary.main};\r\n  color: ${theme.palette.base.white};\r\n  max-width: 80vw;\r\n  width: 100%;\r\n  margin: 20px auto;\r\n  height: 60px;\r\n  font-size: 24px;\r\n  padding: 12px 0 0 12px;\r\n`\r\nStyledQuestion.displayName = 'StyledQuestion'\r\n\r\nconst StyledTableBodyRow = styled(TableRow)`\r\n  height: 60px;\r\n  align-items: center;\r\n  border-radius: 5px;\r\n  Width: 100%;\r\n  &.active {\r\n\t\tbackground: ${theme.palette.primary.main}; \r\n  }\r\n  &:hover{\r\n    cursor: pointer;\r\n\t\tbackground: ${theme.palette.base.main};\r\n  }\r\n`\r\nStyledTableBodyRow.displayName = 'StyledTableBodyRow'\r\n\r\nconst TableHeadRow = styled(TableRow)`\r\n  background: ${theme.palette.base.main};\r\n`\r\nTableHeadRow.displayName = 'TableHeadRow'\r\n\r\nconst StyledTableCell = styled(TableCell)`\r\n  color: ${theme.palette.highlight.main};\r\n\tfont-weight: bold;\r\n`\r\nStyledTableCell.displayName = 'StyledTableCell'\r\n\r\nconst StyledButton = styled.button`\r\n  background: ${theme.palette.secondary.main};\r\n  font-weight: bold;\r\n  color: ${theme.palette.base.white};\r\n\tfloat: right;\r\n  margin-top: 1rem;\r\n\tborder: none;\r\n\tpadding: 10px;\r\n\t&:hover {\r\n\t\tbackground: ${theme.palette.highlight.main};\r\n\t}\r\n`\r\nStyledButton.displayName = 'StyledButton'\r\n\r\nconst StyledLoaderContainer = styled.div`\r\n  max-width: 60px;\r\n  width: 100%;\r\n  margin: 100px auto;\r\n`\r\nStyledLoaderContainer.displayName = 'StyledLoaderContainer'\r\n\r\nconst StyledLoader = styled(Loader)`\r\n  color: ${theme.palette.secondary.main};\r\n`\r\nStyledLoader.displayName = 'StyledLoader'\r\n\r\nconst StyledProgressBar = withStyles(() => ({\r\n  root: {\r\n    height: 20,\r\n    borderRadius: 5,\r\n  },\r\n  colorPrimary: {\r\n    backgroundColor: '#c3cad2',\r\n  },\r\n  bar: {\r\n    backgroundColor: '#164ca3',\r\n  },\r\n}))(ProgressBar);\r\n\r\nconst QuestionDetail = (props) => {\r\n  const [choice, setChoice] = useState({\r\n    title: '',\r\n    url: null\r\n  });\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [modalBodyText, setModalBodyText] = useState('');\r\n  const [modalHeaderText, setModalHeaderText] = useState('');\r\n\tconst { question, choices } = props.selectedQuestion;\r\n\r\n  useEffect(() => {\r\n    const {questionId} = props.match.params;\r\n    props.fetchSingleQuestion(questionId);\r\n  }, []); // eslint-disable-line\r\n\r\n\tconst handleChoiceOnClick = ({choice, url}) => {\r\n    setChoice({\r\n\t    title: choice,\r\n\t    url: url\r\n    });\r\n  }\r\n\r\n\tconst handleVoteSubmit = (event) => {\r\n    axios.post(`${BASE_URL}${choice.url}`).then(() => {\r\n        setModalShow(true);\r\n\t\t\t\tsetModalHeaderText('Success')\r\n\t\t\t\tsetModalBodyText('Your vote has been submitted successfully.');\r\n\t    })\r\n\t    .catch(() => {\r\n        setModalShow(true);\r\n\t\t\t\tsetModalHeaderText('Error')\r\n\t\t\t\tsetModalBodyText('Your vote could not be submitted. Please try again.');\r\n\t    });\r\n    props.postVote(choice);\r\n\t\tevent.preventDefault();\r\n  }\r\n\r\n\tconst handleModalHide = () => {\r\n    setModalShow(false)\r\n\t\tconst {questionId} = props.match.params;\r\n\t\tprops.fetchSingleQuestion(questionId);\r\n  }\r\n\r\n\tconst calculateVotesPercent = (choiceVotes) => {\r\n\t  const totalVotes = choices.reduce((n, {votes}) => n + votes, 0);\r\n    const percent = parseInt(choiceVotes) * 100 / totalVotes;\r\n    const percentValue =  isNaN(parseInt(percent)) ? 0 : percent.toFixed(2);\r\n    return percentValue;\r\n  }\r\n\r\n  const choicesList = choices ? Object.keys(choices).map((key, index) => {\r\n\t  return (\r\n\t    <StyledTableBodyRow\r\n\t\t\t\tkey={key}\r\n\t\t\t\tclassName={`${choice.title === choices[key].choice ? 'active' : ''}`}\r\n\t\t\t\tdata-hook='question-choice'\r\n\t\t\t\tonClick={(event) => {\r\n\t\t      event.preventDefault();\r\n\t\t      handleChoiceOnClick(choices[key]);\r\n\t    }}>\r\n        <StyledTableCell component=\"th\" scope=\"row\">{index + 1}.</StyledTableCell>\r\n        <StyledTableCell>{choices[key].choice}</StyledTableCell>\r\n        <StyledTableCell>{choices[key].votes}</StyledTableCell>\r\n\t\t\t\t<StyledTableCell>{calculateVotesPercent(choices[key].votes)} %</StyledTableCell>\r\n        <StyledTableCell><StyledProgressBar variant=\"determinate\" value={parseInt(calculateVotesPercent(choices[key].votes))} /></StyledTableCell>\r\n\t    </StyledTableBodyRow>\r\n\t  );\r\n\t}) : null;\r\n\r\n  return (\r\n\t\t<>\r\n\t\t  <StyledApp>\r\n\t\t    <StyledAppHeader>\r\n\t\t      <h1>Details</h1>\r\n\t\t    </StyledAppHeader>\r\n\t\t    {props.isLoading &&\r\n\t\t\t\t\t<StyledLoaderContainer><StyledLoader /></StyledLoaderContainer>}\r\n\t\t\t\t{!props.isLoading && <StyledContainer>\r\n\t\t      <StyledQuestion>Question: {question}</StyledQuestion>\r\n\t\t      <form onSubmit={handleVoteSubmit}>\r\n\t\t\t\t    <TableContainer component={Paper}>\r\n\t\t\t\t      <Table>\r\n\t\t\t\t        <TableHead>\r\n\t\t\t\t          <TableHeadRow>\r\n\t\t\t\t            <StyledTableCell>No.</StyledTableCell>\r\n\t\t\t\t            <StyledTableCell>Choice</StyledTableCell>\r\n\t\t\t\t            <StyledTableCell>Votes</StyledTableCell>\r\n\t\t\t\t            <StyledTableCell>Percent (%)</StyledTableCell>\r\n\t\t\t\t\t\t\t\t\t\t<StyledTableCell>Progress</StyledTableCell>\r\n\t\t\t\t          </TableHeadRow>\r\n\t\t\t\t        </TableHead>\r\n\t\t\t\t        <TableBody data-hook='question-table'>\r\n\t\t\t\t          {choicesList}\r\n\t\t\t\t        </TableBody>\r\n\t\t\t\t      </Table>\r\n\t\t\t\t    </TableContainer>\r\n\t\t        <StyledButton type=\"submit\" data-hook='submit-vote'>Submit vote</StyledButton>\r\n\t\t      </form>\r\n\t\t    </StyledContainer>}\r\n\t\t  </StyledApp>\r\n\t\t  <FormModal\r\n\t\t    show={modalShow}\r\n\t\t    onHide={() => setModalShow(false)}\r\n\t\t\t\tshowVotingResults={() => handleModalHide()}\r\n\t\t\t\theader={modalHeaderText}\r\n\t\t\t\tbody={modalBodyText}\r\n\t\t  />\r\n\t  </>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps({ selectedQuestion, isLoading }) {\r\n  return { selectedQuestion, isLoading }\r\n}\r\n\r\nQuestionDetail.propTypes = {\r\n  isLoading: PropTypes.bool.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n  match: PropTypes.object.isRequired,\r\n  selectedQuestion: PropTypes.object.isRequired,\r\n  fetchSingleQuestion: PropTypes.func.isRequired,\r\n  postVote: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchSingleQuestion, postVote })(QuestionDetail);","export default __webpack_public_path__ + \"static/media/vote.8d8529c3.png\";","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport styled from 'styled-components';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport vote from 'assets/vote.png';\r\nimport {theme} from 'theme/theme.js';\r\n\r\nconst styles = makeStyles();\r\n\r\nconst StyledAppBar = styled(AppBar)`\r\n  background-color: ${theme.palette.secondary.main};\r\n`\r\nStyledAppBar.displayName = 'StyledAppBar'\r\n\r\nconst StyledAppBarLogo = styled.img`\r\n  max-width: 160px;\r\n  margin-left: 16px;\r\n`\r\nStyledAppBarLogo.displayName = 'StyledAppBarLogo'\r\n\r\nconst StyledHomeIcon = styled(HomeIcon)`\r\n  font-size: 48px;\r\n  color: ${theme.palette.primary.main};\r\n`\r\nStyledHomeIcon.displayName = 'StyledHomeIcon'\r\n\r\nconst ButtonAppBar = () => {\r\n  styles();\r\n\r\n  return (\r\n    <>\r\n      <StyledAppBar position=\"static\" data-hook='app-bar'>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            data-hook='home-button'\r\n          >\r\n\t\t\t\t    <Link to={`/`}>\r\n\t\t          <StyledHomeIcon />\r\n\t\t        </Link>\r\n          </IconButton>\r\n          <StyledAppBarLogo src={vote} alt=\"vote\" />\r\n        </Toolbar>\r\n      </StyledAppBar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ButtonAppBar;\r\n","import React from 'react';\r\nimport { \r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from 'react-router-dom';\r\nimport HomePage from 'components/HomePage';\r\nimport QuestionDetails from 'components/QuestionDetails';\r\nimport AppBar from 'components/AppBar';\r\n\r\nconst App = () => (\r\n  <>\r\n    <Router>\r\n      <AppBar exact path=\"/\" component={HomePage} />\r\n      <Route exact path=\"/\" render={() => <Redirect to=\"/questions\" />} />\r\n      <Switch>\r\n        <Route path=\"/questions/:questionId\" component={QuestionDetails} />\r\n        <Route path=\"/questions\" component={HomePage} />\"\r\n      </Switch>\r\n    </Router>\r\n  </>\r\n)\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'index.css';\r\nimport { Provider } from 'react-redux';\r\nimport configStore from 'redux/store';\r\nimport * as serviceWorker from 'serviceWorker';\r\nimport App from 'App';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nconst store = configStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}